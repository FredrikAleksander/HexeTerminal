#pragma once

// This is the customizable colorscheme
const char *colornames[256] = {
    "#1e2127",
    "#e06c75",
    "#98c379",
    "#d19a66",
    "#61afef",
    "#c678dd",
    "#56b6c2",
    "#abb2bf",
    "#5c6370",
    "#e06c75",
    "#98c379",
    "#d19a66",
    "#61afef",
    "#c678dd",
    "#56b6c2",
    "#ffffff",
    "#1e2127",
    "#abb2bf"};

#define rgb(r, g, b) IM_COL32(r, g, b, 255)
#define IM_COL32_term(r, g, b) IM_COL32(r, g, b, 255)

// This is the default Xterm palette
static const ImU32 colormapped[256] = {
    IM_COL32_term(0, 0, 0),
    IM_COL32_term(128, 0, 0),
    IM_COL32_term(0, 128, 0),
    IM_COL32_term(128, 128, 0),
    IM_COL32_term(0, 0, 128),
    IM_COL32_term(128, 0, 128),
    IM_COL32_term(0, 128, 128),
    IM_COL32_term(192, 192, 192),
    IM_COL32_term(128, 128, 128),
    IM_COL32_term(255, 0, 0),
    IM_COL32_term(0, 255, 0),
    IM_COL32_term(255, 255, 0),
    IM_COL32_term(0, 0, 255),
    IM_COL32_term(255, 0, 255),
    IM_COL32_term(0, 255, 255),
    IM_COL32_term(255, 255, 255),

    IM_COL32_term(0, 0, 0),
    IM_COL32_term(0, 0, 95),
    IM_COL32_term(0, 0, 135),
    IM_COL32_term(0, 0, 175),
    IM_COL32_term(0, 0, 215),
    IM_COL32_term(0, 0, 255),
    IM_COL32_term(0, 95, 0),
    IM_COL32_term(0, 95, 95),
    IM_COL32_term(0, 95, 135),
    IM_COL32_term(0, 95, 175),
    IM_COL32_term(0, 95, 215),
    IM_COL32_term(0, 95, 255),
    IM_COL32_term(0, 135, 0),
    IM_COL32_term(0, 135, 95),
    IM_COL32_term(0, 135, 135),
    IM_COL32_term(0, 135, 175),
    IM_COL32_term(0, 135, 215),
    IM_COL32_term(0, 135, 255),
    IM_COL32_term(0, 175, 0),
    IM_COL32_term(0, 175, 95),
    IM_COL32_term(0, 175, 135),
    IM_COL32_term(0, 175, 175),
    IM_COL32_term(0, 175, 215),
    IM_COL32_term(0, 175, 255),
    IM_COL32_term(0, 215, 0),
    IM_COL32_term(0, 215, 95),
    IM_COL32_term(0, 215, 135),
    IM_COL32_term(0, 215, 175),
    IM_COL32_term(0, 215, 215),
    IM_COL32_term(0, 215, 255),
    IM_COL32_term(0, 255, 0),
    IM_COL32_term(0, 255, 95),
    IM_COL32_term(0, 255, 135),
    IM_COL32_term(0, 255, 175),
    IM_COL32_term(0, 255, 215),
    IM_COL32_term(0, 255, 255),
    IM_COL32_term(95, 0, 0),
    IM_COL32_term(95, 0, 95),
    IM_COL32_term(95, 0, 135),
    IM_COL32_term(95, 0, 175),
    IM_COL32_term(95, 0, 215),
    IM_COL32_term(95, 0, 255),
    IM_COL32_term(95, 95, 0),
    IM_COL32_term(95, 95, 95),
    IM_COL32_term(95, 95, 135),
    IM_COL32_term(95, 95, 175),
    IM_COL32_term(95, 95, 215),
    IM_COL32_term(95, 95, 255),
    IM_COL32_term(95, 135, 0),
    IM_COL32_term(95, 135, 95),
    IM_COL32_term(95, 135, 135),
    IM_COL32_term(95, 135, 175),
    IM_COL32_term(95, 135, 215),
    IM_COL32_term(95, 135, 255),
    IM_COL32_term(95, 175, 0),
    IM_COL32_term(95, 175, 95),
    IM_COL32_term(95, 175, 135),
    IM_COL32_term(95, 175, 175),
    IM_COL32_term(95, 175, 215),
    IM_COL32_term(95, 175, 255),
    IM_COL32_term(95, 215, 0),
    IM_COL32_term(95, 215, 95),
    IM_COL32_term(95, 215, 135),
    IM_COL32_term(95, 215, 175),
    IM_COL32_term(95, 215, 215),
    IM_COL32_term(95, 215, 255),
    IM_COL32_term(95, 255, 0),
    IM_COL32_term(95, 255, 95),
    IM_COL32_term(95, 255, 135),
    IM_COL32_term(95, 255, 175),
    IM_COL32_term(95, 255, 215),
    IM_COL32_term(95, 255, 255),
    IM_COL32_term(135, 0, 0),
    IM_COL32_term(135, 0, 95),
    IM_COL32_term(135, 0, 135),
    IM_COL32_term(135, 0, 175),
    IM_COL32_term(135, 0, 215),
    IM_COL32_term(135, 0, 255),
    IM_COL32_term(135, 95, 0),
    IM_COL32_term(135, 95, 95),
    IM_COL32_term(135, 95, 135),
    IM_COL32_term(135, 95, 175),
    IM_COL32_term(135, 95, 215),
    IM_COL32_term(135, 95, 255),
    IM_COL32_term(135, 135, 0),
    IM_COL32_term(135, 135, 95),
    IM_COL32_term(135, 135, 135),
    IM_COL32_term(135, 135, 175),
    IM_COL32_term(135, 135, 215),
    IM_COL32_term(135, 135, 255),
    IM_COL32_term(135, 175, 0),
    IM_COL32_term(135, 175, 95),
    IM_COL32_term(135, 175, 135),
    IM_COL32_term(135, 175, 175),
    IM_COL32_term(135, 175, 215),
    IM_COL32_term(135, 175, 255),
    IM_COL32_term(135, 215, 0),
    IM_COL32_term(135, 215, 95),
    IM_COL32_term(135, 215, 135),
    IM_COL32_term(135, 215, 175),
    IM_COL32_term(135, 215, 215),
    IM_COL32_term(135, 215, 255),
    IM_COL32_term(135, 255, 0),
    IM_COL32_term(135, 255, 95),
    IM_COL32_term(135, 255, 135),
    IM_COL32_term(135, 255, 175),
    IM_COL32_term(135, 255, 215),
    IM_COL32_term(135, 255, 255),
    IM_COL32_term(175, 0, 0),
    IM_COL32_term(175, 0, 95),
    IM_COL32_term(175, 0, 135),
    IM_COL32_term(175, 0, 175),
    IM_COL32_term(175, 0, 215),
    IM_COL32_term(175, 0, 255),
    IM_COL32_term(175, 95, 0),
    IM_COL32_term(175, 95, 95),
    IM_COL32_term(175, 95, 135),
    IM_COL32_term(175, 95, 175),
    IM_COL32_term(175, 95, 215),
    IM_COL32_term(175, 95, 255),
    IM_COL32_term(175, 135, 0),
    IM_COL32_term(175, 135, 95),
    IM_COL32_term(175, 135, 135),
    IM_COL32_term(175, 135, 175),
    IM_COL32_term(175, 135, 215),
    IM_COL32_term(175, 135, 255),
    IM_COL32_term(175, 175, 0),
    IM_COL32_term(175, 175, 95),
    IM_COL32_term(175, 175, 135),
    IM_COL32_term(175, 175, 175),
    IM_COL32_term(175, 175, 215),
    IM_COL32_term(175, 175, 255),
    IM_COL32_term(175, 215, 0),
    IM_COL32_term(175, 215, 95),
    IM_COL32_term(175, 215, 135),
    IM_COL32_term(175, 215, 175),
    IM_COL32_term(175, 215, 215),
    IM_COL32_term(175, 215, 255),
    IM_COL32_term(175, 255, 0),
    IM_COL32_term(175, 255, 95),
    IM_COL32_term(175, 255, 135),
    IM_COL32_term(175, 255, 175),
    IM_COL32_term(175, 255, 215),
    IM_COL32_term(175, 255, 255),
    IM_COL32_term(215, 0, 0),
    IM_COL32_term(215, 0, 95),
    IM_COL32_term(215, 0, 135),
    IM_COL32_term(215, 0, 175),
    IM_COL32_term(215, 0, 215),
    IM_COL32_term(215, 0, 255),
    IM_COL32_term(215, 95, 0),
    IM_COL32_term(215, 95, 95),
    IM_COL32_term(215, 95, 135),
    IM_COL32_term(215, 95, 175),
    IM_COL32_term(215, 95, 215),
    IM_COL32_term(215, 95, 255),
    IM_COL32_term(215, 135, 0),
    IM_COL32_term(215, 135, 95),
    IM_COL32_term(215, 135, 135),
    IM_COL32_term(215, 135, 175),
    IM_COL32_term(215, 135, 215),
    IM_COL32_term(215, 135, 255),
    IM_COL32_term(215, 175, 0),
    IM_COL32_term(215, 175, 95),
    IM_COL32_term(215, 175, 135),
    IM_COL32_term(215, 175, 175),
    IM_COL32_term(215, 175, 215),
    IM_COL32_term(215, 175, 255),
    IM_COL32_term(215, 215, 0),
    IM_COL32_term(215, 215, 95),
    IM_COL32_term(215, 215, 135),
    IM_COL32_term(215, 215, 175),
    IM_COL32_term(215, 215, 215),
    IM_COL32_term(215, 215, 255),
    IM_COL32_term(215, 255, 0),
    IM_COL32_term(215, 255, 95),
    IM_COL32_term(215, 255, 135),
    IM_COL32_term(215, 255, 175),
    IM_COL32_term(215, 255, 215),
    IM_COL32_term(215, 255, 255),
    IM_COL32_term(255, 0, 0),
    IM_COL32_term(255, 0, 95),
    IM_COL32_term(255, 0, 135),
    IM_COL32_term(255, 0, 175),
    IM_COL32_term(255, 0, 215),
    IM_COL32_term(255, 0, 255),
    IM_COL32_term(255, 95, 0),
    IM_COL32_term(255, 95, 95),
    IM_COL32_term(255, 95, 135),
    IM_COL32_term(255, 95, 175),
    IM_COL32_term(255, 95, 215),
    IM_COL32_term(255, 95, 255),
    IM_COL32_term(255, 135, 0),
    IM_COL32_term(255, 135, 95),
    IM_COL32_term(255, 135, 135),
    IM_COL32_term(255, 135, 175),
    IM_COL32_term(255, 135, 215),
    IM_COL32_term(255, 135, 255),
    IM_COL32_term(255, 175, 0),
    IM_COL32_term(255, 175, 95),
    IM_COL32_term(255, 175, 135),
    IM_COL32_term(255, 175, 175),
    IM_COL32_term(255, 175, 215),
    IM_COL32_term(255, 175, 255),
    IM_COL32_term(255, 215, 0),
    IM_COL32_term(255, 215, 95),
    IM_COL32_term(255, 215, 135),
    IM_COL32_term(255, 215, 175),
    IM_COL32_term(255, 215, 215),
    IM_COL32_term(255, 215, 255),
    IM_COL32_term(255, 255, 0),
    IM_COL32_term(255, 255, 95),
    IM_COL32_term(255, 255, 135),
    IM_COL32_term(255, 255, 175),
    IM_COL32_term(255, 255, 215),
    IM_COL32_term(255, 255, 255),
    IM_COL32_term(8, 8, 8),
    IM_COL32_term(18, 18, 18),
    IM_COL32_term(28, 28, 28),
    IM_COL32_term(38, 38, 38),
    IM_COL32_term(48, 48, 48),
    IM_COL32_term(58, 58, 58),
    IM_COL32_term(68, 68, 68),
    IM_COL32_term(78, 78, 78),
    IM_COL32_term(88, 88, 88),
    IM_COL32_term(98, 98, 98),
    IM_COL32_term(108, 108, 108),
    IM_COL32_term(118, 118, 118),
    IM_COL32_term(128, 128, 128),
    IM_COL32_term(138, 138, 138),
    IM_COL32_term(148, 148, 148),
    IM_COL32_term(158, 158, 158),
    IM_COL32_term(168, 168, 168),
    IM_COL32_term(178, 178, 178),
    IM_COL32_term(188, 188, 188),
    IM_COL32_term(198, 198, 198),
    IM_COL32_term(208, 208, 208),
    IM_COL32_term(218, 218, 218),
    IM_COL32_term(228, 228, 228),
    IM_COL32_term(238, 238, 238)};